​LabSO1-AA_2019_2020--202535_201675_202453_202363

samuele.conti@studenti.unitn.it

Samuele Conti, 202535 samuele.conti@studenti.unitn.it
Francesco Bozzo, 201675 francesco.bozzo@studenti.unitn.it
Michele Yin, 202453 michele.yin@studenti.unitn.it
Giacomo Zanolli, 202363 giacomo.zanolli@studenti.unitn.it

------------------------Descrizione------------------------
Il progetto è costituito da tre componenti principali:

- Analyzer:
  Permette all'utente di gestire un'analisi dati dei file specificati.
- Report:
  Programma che permette all'utente di visualizzare lo stato dell'analisi e i suoi risultati.
- Main:
  Permette all'utente di interagire con Analyzer e Report tramite comandi testuali

------------------------Peculiarità------------------------

- Analyzer:
  1. È possibile avviarlo in due modalità: statica e dinamica.
     - modalità statica: permette di eseguire un'analisi di una lista di file/cartelle dopo aver specificato dei valori per n ed m. Una volta terminata un'analisi il programma termina.
     - modalità dinamica: come per la modalità statica, ma permette di modifcare dinamicamente n, m e la lista dei file. Una volta terminata un'analisi si riparte dalla lista precedente dei file e dai vecchi n ed m (che possono essere modificati).
  
- Report
  1. È offerta la possibilità di specificare con vari flag la modalità di visualizzazione dei dati che si preferisce tra quelle disponibili. Questo è possibile anche durante l'esecuzione.
  2. Report è in grado di gestire anche più analisi eseguite in modo concorrente mostrando i dati di ciascuna (e distinguendole in base al rispettivo process id).
  3. Report è in grado di mostrare, in alcune visualizzazioni, il progresso delle analisi dei vari files che stanno venendo analizzati correntemente (es README.md analizzato al 36%).
  4. Specificando il flag --dump ogni analisi iniziata da quel momento in poi scriverà su un file di log eventuali messaggi provenienti dall'analyzer

- Main
  1. È possibile utilizzarlo per avviare l'analyzer in modalità statica
  2. Visualizza il report in modalità verbosa di default
  3. Permette di interagire con il report durante l'esecuzione

------------------------Limitazioni------------------------

- Il sistema analyzer e il report necessitano di una FIFO per comunicare; se qualche altro processo (che non sia un analyzer) scrive sulla FIFO o l'utente crea situazioni per cui analyzer o report non possono accedervi il corretto funzionamento del programma viene precluso.
- È supportata solamente la codifica extended ASCII.
- Il sistema di input utilizzato in fase d'esecuzione sfrutta la libreria termios.h per dare la possibilità di poter inserire comandi da parte dell'utente e contemporaneamente aggiornare l'utente sullo svolgimento dell'analisi. Questo impedisce all'utente di cancellare un comando che sta inserendo e di muoversi correttamente con le freccie sul terminale.
- Sempre a causa di termios nel caso la schermata da visualizzare è più grande dello schermo disponibile non si potrà scrollare e la vissualizzazione risulterà deformata.
- Se all'analyzer non viene inserito nessun file valido, allora ci sono dei problemi di sincronizzazione col report.
- Possiamo processare file di al massimo 4,294,967,295 bytes per motivi di efficienza.
- Se si esegue main è necessario che si trovi nella cartella corrente di lavoro. Questo non è necessario nel caso in cui si eseguano analyzer e report separatamente.
- Report quando avviato resta in attesa di dati dall'analyzer prima di iniziare a stampare comandi a schermo
- Analyzer al momento dell'avvio tenta di aprire la fifo verso il Report, l'analisi non può iniziare fino a che il Report non apre la pipe.

---------------------Istruzioni rapide---------------------

- Analyzer: elenco dei comandi che è possibile specificare sia da linea di comando che all'interno del programma (se in modalità dinamica)
  Per iniziare un'analisi bisogna inserire almeno: mode, n, m e almeno un file/cartella
  -i: interactive mode
  -s: static mode
  -h: help mode
  -add _name1_ _name2_...   aggiunta di file/folder
  -rem _names_ _name2_...   rimozione di file/folder (in modalità interattiva)
  -n   _value_              cambia il valore di n
  -m   _value_              cambia il valore di m
  -show                     mostra i valori attuali di n ed m (in modalità interattiva)
  -analyze                  inizia il processo di analisi (in modalità interattiva)
  -quit                     chiudi il processo

- Report: Visualizza i dati provenienti dall'analyzer (o dagli analyzers)
  Le opzioni di visualizzazione sono:
  -t      visualizzazione in "tabella"
  -v      visualizzazione "verbosa"
  -c      visualizzazione "compatta"
  --only  Questo flag, seguito da una lista di percorsi permette di vedere le statistiche relative a tutti e soli i files
  Di default le statistiche sono raggruppate per minuscole, maiuscole, numeri, punteggiatura e spazi ma aggiungendo il l'opzione -e al comando -v è possibile visualizzare le statistiche dei singoli caratteri.
  Infine sono disponibili dei comandi:
  -h		help: mostra questa schermata
  -r		reset: cancella i dati attuali di tutte le analisi
  -q		quit: chiude il programma

- Main: 
  Permette di avviare un'analisi e interagire con un report.
  Al momento dell'invocazione bisogna specificare eventuali comandi da dare all'analyzer con una sintassi come la seguente:
    ./main [comandi per analyzer]
  Se si vogliono specificare anche comandi per il report si possono inserire separandoli da quelli dell'analyzer con tre trattini, con una sintassi come la seguente:
    ./main [comandi per analyzer] --- [comandi per report]
  Questi comandi verranno reindirizzati ad analyzer o report e sarà poi possibile interagire con il report
  